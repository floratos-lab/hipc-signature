<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:batch="http://www.springframework.org/schema/batch"
		xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
							http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

  <import resource="classpath*:META-INF/spring/adminApplicationContext.xml" />
  <context:component-scan base-package="gov.nih.nci.ctd2.dashboard.importer.internal" />

  <batch:job id="controlledVocabularyImporterJob">
	<batch:step id="controlledVocabularyPerTemplateStep" parent="controlledVocabularySimpleStep" next="controlledVocabularyPerColumnStep">
	  <batch:tasklet>
		<batch:chunk reader="controlledVocabularyPerTemplateReader" writer="controlledVocabularyPerTemplateWriter"/>
	  </batch:tasklet>
	</batch:step>
	<batch:step id="controlledVocabularyPerColumnStep" parent="controlledVocabularySimpleStep">
	  <batch:tasklet>
		<batch:chunk reader="controlledVocabularyPerColumnReader" processor="controlledVocabularyPerColumnProcessor" writer="controlledVocabularyPerColumnWriter"/>
	  </batch:tasklet>
	</batch:step>
  </batch:job>

  <bean id="controlledVocabularySimpleStep" class="org.springframework.batch.core.step.item.SimpleStepFactoryBean" abstract="true">
	<property name="transactionManager" ref="transactionManager" />
	<property name="jobRepository" ref="jobRepository" />
	<property name="commitInterval" value="${spring.batch.commit.interval}" />
  </bean>

  <!-- cv per template beans -->

  <bean name="controlledVocabularyPerTemplateReader" class="org.springframework.batch.item.file.FlatFileItemReader">
	<property name="resource" value="${dashboard.cv.per.template.data.location}" />
    <property name="lineMapper" ref="controlledVocabularyPerTemplateLineMapper" />
	<property name="linesToSkip" value="1" />
  </bean>

  <bean name="controlledVocabularyPerTemplateLineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
	<property name="fieldSetMapper" ref="controlledVocabularyPerTemplateMapper" />
	<property name="lineTokenizer" ref="controlledVocabularyPerTemplateLineTokenizer" />
  </bean>

  <bean name="controlledVocabularyPerTemplateLineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" >
	<property name="delimiter" value="\u0009"/>
	<property name="names" value="observation_tier,template_name,observation_summary,template_description,submission_name,submission_description,project,submission_story,submission_story_rank,submission_center,principal_investigator"/>
  </bean>

  <!-- cv per column beans -->

  <bean name="controlledVocabularyPerColumnReader" class="org.springframework.batch.item.file.FlatFileItemReader">
	<property name="resource" value="${dashboard.cv.per.column.data.location}" />
    <property name="lineMapper" ref="controlledVocabularyPerColumnLineMapper" />
	<property name="linesToSkip" value="1" />
  </bean>

  <bean name="controlledVocabularyPerColumnLineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
	<property name="fieldSetMapper" ref="controlledVocabularyPerColumnMapper" />
	<property name="lineTokenizer" ref="controlledVocabularyPerColumnLineTokenizer" />
  </bean>

  <bean name="controlledVocabularyPerColumnLineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" >
	<property name="delimiter" value="\u0009"/>
	<property name="names" value="id,template_name,column_name,subject,evidence,role,mime_type,numeric_units,display_text"/>
  </bean>

  <!-- the following beans are shared between all the steps of the observation data importer job -->
  <bean name="observationTemplateMap" class="java.util.HashMap">
	<constructor-arg index="0" type="java.util.Map">
	  <map key-type="java.lang.String" value-type="gov.nih.nci.ctd2.dashboard.model.ObservationTemplate"/>
	</constructor-arg>
  </bean>
</beans>
